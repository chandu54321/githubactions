name: "Terraform Infrastructure Management"

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.FIRST }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.FIRSTKEY }}
  
jobs:
  terraform:
    name: "Terraform Workflow"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN_OUTPUT: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format Status üñåÔ∏è \`${{ steps.fmt.outcome }}\`
            #### Terraform Init Status ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Terraform Validate Status ü§ñ \`${{ steps.validate.outcome }}\`
            #### Terraform Plan Output üìñ \`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n${process.env.PLAN_OUTPUT}\`\`\`
            </details>
            *Triggered by @${{ github.actor }} during \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Check Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply --auto-approve -input=false
